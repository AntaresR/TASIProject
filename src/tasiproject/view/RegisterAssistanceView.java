package tasiproject.view;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ListSelectionEvent;
import tasiproject.adapters.RegisterAssistanceTableModel;
import tasiproject.controller.AssistanceController;
import tasiproject.models.Assistance;
import tasiproject.models.Employee;
import tasiproject.models.ErrorMessage;
import tasiproject.models.Schedule;

/**
 *
 * @author paolo
 */
public class RegisterAssistanceView extends javax.swing.JInternalFrame {

    RegisterAssistanceTableModel registerAssistanceTableModel = new RegisterAssistanceTableModel(1);
    private int currentEmployeeInModification;

    /**
     * Creates new form RegisterEmployee
     */
    public RegisterAssistanceView() {
        initComponents();
        initActions();

        List<Assistance> employeeAssistance = new ArrayList<>();
        //I obtain all the assistances registered in the database for today

        Assistance assistance = new Assistance();

        Employee employee = new Employee();
        employee.setName("paolo");
        assistance.setEmployee(employee);
        Schedule schedule = new Schedule();
        schedule.setBeginTime(new Date());
        assistance.setSchedule(schedule);
        employeeAssistance.add(assistance);

        assistance = new Assistance();
        employee = new Employee();
        employee.setName("SERGIO");
        assistance.setEmployee(employee);
        schedule = new Schedule();
        schedule.setBeginTime(new Date());
        assistance.setSchedule(schedule);
        employeeAssistance.add(assistance);

        registerAssistanceTableModel.loadData(employeeAssistance);

        jLCurrentDay.setText("" + new Date());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTFBalance = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTAssistance = new javax.swing.JTable();
        jBSave = new javax.swing.JButton();
        jLCurrentDay = new javax.swing.JLabel();
        jSpEntryTimeMinute = new javax.swing.JSpinner();
        jSpEndTimeMinute = new javax.swing.JSpinner();
        jSpEntryTimeHour = new javax.swing.JSpinner();
        jSpEndTimeHour = new javax.swing.JSpinner();
        jBCancel = new javax.swing.JButton();
        jBOk = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Register Assistance");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel5.setText("Entry Time");

        jLabel6.setText("End Time");

        jLabel7.setText("Balance");

        jTFBalance.setEnabled(false);
        jTFBalance.setFocusable(false);

        jTAssistance.setModel(registerAssistanceTableModel);
        jScrollPane2.setViewportView(jTAssistance);

        jBSave.setText("Save");
        jBSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSaveActionPerformed(evt);
            }
        });

        jLCurrentDay.setText("jLabel1");

        jSpEntryTimeMinute.setModel(new javax.swing.SpinnerNumberModel(0, 0, 60, 1));

        jSpEndTimeMinute.setModel(new javax.swing.SpinnerNumberModel(0, 0, 60, 1));

        jSpEntryTimeHour.setModel(new javax.swing.SpinnerNumberModel(0, 0, 24, 1));

        jSpEndTimeHour.setModel(new javax.swing.SpinnerNumberModel(0, 0, 24, 1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLCurrentDay, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jSpEntryTimeHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jSpEntryTimeMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jSpEndTimeHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jSpEndTimeMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTFBalance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBSave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jLCurrentDay)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jSpEntryTimeMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpEntryTimeHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jSpEndTimeMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpEndTimeHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTFBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBSave)
                .addGap(6, 6, 6))
        );

        jBCancel.setText("Cancel");
        jBCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelActionPerformed(evt);
            }
        });

        jBOk.setText("Ok");
        jBOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBOk, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBCancel)
                        .addGap(12, 12, 12))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCancel)
                    .addComponent(jBOk))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSaveActionPerformed
        Assistance assistance = registerAssistanceTableModel.getData(currentEmployeeInModification);
        try {
            if (jTFBalance.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "You must modify the values first");
                return;
            }
            assistance.setBalance(Integer.parseInt(jTFBalance.getText()));
            assistance.getSchedule().setBeginTime(new SimpleDateFormat("HH:mm:ss").parse(
                    jSpEntryTimeHour.getValue() + ":" + jSpEntryTimeMinute.getValue() + ":00"));
            assistance.getSchedule().setEndTime(new SimpleDateFormat("HH:mm:ss").parse(
                    jSpEndTimeHour.getValue() + ":" + jSpEndTimeMinute.getValue() + ":00"));

            registerAssistanceTableModel.findAndReplace(assistance, currentEmployeeInModification);
        } catch (ParseException ex) {
            Logger.getLogger(RegisterAssistanceView.class.getName()).log(Level.SEVERE, null, ex);
        }
        resetValues();
    }//GEN-LAST:event_jBSaveActionPerformed

    private void jBCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBCancelActionPerformed

    private void jBOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOkActionPerformed
        ErrorMessage errorMessage = AssistanceController.registerAssistance(registerAssistanceTableModel.getData());
        JOptionPane.showMessageDialog(this, errorMessage.getMessage());
        if (errorMessage.isValid()) {
            this.dispose();
        }
    }//GEN-LAST:event_jBOkActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCancel;
    private javax.swing.JButton jBOk;
    private javax.swing.JButton jBSave;
    private javax.swing.JLabel jLCurrentDay;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpEndTimeHour;
    private javax.swing.JSpinner jSpEndTimeMinute;
    private javax.swing.JSpinner jSpEntryTimeHour;
    private javax.swing.JSpinner jSpEntryTimeMinute;
    private javax.swing.JTable jTAssistance;
    private javax.swing.JTextField jTFBalance;
    // End of variables declaration//GEN-END:variables

    private void initActions() {
        jTAssistance.getSelectionModel().addListSelectionListener((ListSelectionEvent event) -> {
            if (jTAssistance.getSelectedRow() > -1) {
                currentEmployeeInModification = jTAssistance.getSelectedRow();
                Assistance assistance = registerAssistanceTableModel.getData(jTAssistance.getSelectedRow());
                int count = 0;
                if (assistance.getSchedule().getBeginTime() != null) {
                    jSpEntryTimeHour.setValue(assistance.getSchedule().getBeginTime().getHours());
                    jSpEntryTimeMinute.setValue(assistance.getSchedule().getBeginTime().getMinutes());
                    count++;
                }
                if (assistance.getSchedule().getEndTime() != null) {
                    jSpEndTimeHour.setValue(assistance.getSchedule().getEndTime().getHours());
                    jSpEndTimeMinute.setValue(assistance.getSchedule().getEndTime().getMinutes());
                    count++;
                } else {
                    jSpEndTimeHour.setValue(0);
                    jSpEndTimeMinute.setValue(0);
                }

                if (count == 2) {
                    jTFBalance.setText("" + (-assistance.getSchedule().getBeginTime().getHours() * 60
                            - assistance.getSchedule().getBeginTime().getMinutes()
                            + assistance.getSchedule().getEndTime().getHours() * 60
                            + assistance.getSchedule().getEndTime().getMinutes()));
                }
            }
        });

        ChangeListener balanceListener = (ChangeEvent e) -> {
            int n = -(int) jSpEntryTimeHour.getValue() * 60 - (int) jSpEntryTimeMinute.getValue()
                    + ((int) jSpEndTimeHour.getValue() * 60 + (int) jSpEndTimeMinute.getValue());
            jTFBalance.setText("" + n);
        };

        jSpEntryTimeHour.addChangeListener(balanceListener);
        jSpEntryTimeMinute.addChangeListener(balanceListener);
        jSpEndTimeHour.addChangeListener(balanceListener);
        jSpEndTimeMinute.addChangeListener(balanceListener);
    }

    private void resetValues() {
        jSpEntryTimeHour.setValue(0);
        jSpEntryTimeMinute.setValue(0);

        jSpEndTimeHour.setValue(0);
        jSpEndTimeMinute.setValue(0);

        jTFBalance.setText("");
    }
}
